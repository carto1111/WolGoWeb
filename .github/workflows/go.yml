name: Build Go Binary and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go_version: ['1.18']
        goos: ['linux', 'windows', 'darwin']
        goarch: ['amd64', 'arm64']
        exclude:
        - goos: windows
          goarch: arm64
  
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}
        
      - name: Build Go Binary
        run: |
          export GOOS=${{ matrix.goos }}
          export GOARCH=${{ matrix.goarch }}
          go env
          cd src
          go build -o WolGoWeb-${{ matrix.goos }}-${{ matrix.goarch }}-${{ matrix.go_version }}.bin
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: WolGoWeb-${{ matrix.goos }}-${{ matrix.goarch }}-${{ matrix.go_version }}
          path: ./src/WolGoWeb-${{ matrix.goos }}-${{ matrix.goarch }}-${{ matrix.go_version }}.bin
      
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/WolGoWeb-${{ matrix.goos }}-${{ matrix.goarch }}-${{ matrix.go_version }}.bin
          asset_name: WolGoWeb-${{ matrix.goos }}-${{ matrix.goarch }}-${{ matrix.go_version }}.bin
          asset_content_type: application/octet-stream
